{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the logic app to create."
      }
    },
    "testUri": {
      "type": "string",
      "defaultValue": "http://azure.microsoft.com/en-us/status/feed/",
      "metadata": {
        "description": "A test URI"
      }
    },
    "logicAppDef": {
        "type": "object"
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app to create. Must be globally unique."
      }
    }
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "repoUrl":"https://github.com/awheatley29560/azure-test/functions.git",
    "branch":"master"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "LogicApp"
      },
      "properties": "[parameters('logicAppDef')]"
    },
    {
      "apiVersion": "2016-03-01",
      "name": "[parameters('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "properties": {
          "name": "[parameters('functionAppName')]",
          "siteConfig": {
              "appSettings": [
                  {
                      "name": "AzureWebJobsDashboard",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                  },
                  {
                      "name": "AzureWebJobsStorage",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                  },
                  {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~1"
                  },
                  {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
                  },
                  {
                      "name": "WEBSITE_CONTENTSHARE",
                      "value": "[concat(toLower(parameters('functionAppName')), 'b99f')]"
                  },
                  {
                      "name": "WEBSITE_NODE_DEFAULT_VERSION",
                      "value": "6.5.0"
                  }
              ]
          },
          "clientAffinityEnabled": false
      },
      "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
       "resources": [
          {
            "apiVersion": "2015-08-01",
            "name": "web",
            "type": "sourcecontrols",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', parameters('functionAppName'))]"
            ],
            "properties": {
              "RepoUrl": "[variables('repoURL')]",
              "branch": "[variables('branch')]",
              "IsManualIntegration": true
            }
          }
        ]
    }
  ],
  "outputs": {}
}